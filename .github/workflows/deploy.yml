name: Build and Deploy .NET 8 App to Azure Web App - AceKreme_v1

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: acekremev1app              
  AZURE_WEBAPP_PACKAGE_PATH: ./publish      
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        #  Build the solution without specifying an output (fixes "solution-level output" error)
        run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Run tests (optional)
        run: dotnet test --no-build --verbosity normal
        continue-on-error: true  # Allows build to continue if tests fail

      - name: Publish app
        #  Explicitly target the .csproj to fix "solution output" issue
        run: dotnet publish AceKreme_v1/AceKreme_v1.csproj --configuration ${{ env.CONFIGURATION }} --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download published artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure Web App
        #  Uses the publish profile secret from GitHub (ensure XML format)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
